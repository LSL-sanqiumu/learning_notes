<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="741px" height="501px" viewBox="-0.5 -0.5 741 501"><defs/><g><rect x="0" y="0" width="740" height="500" fill="#ffcccc" stroke="#36393d" pointer-events="all"/><rect x="67.5" y="160" width="192.5" height="30" rx="4.5" ry="4.5" fill="#282c34" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 191px; height: 1px; padding-top: 175px; margin-left: 69px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><pre style="background-color: rgb(40 , 44 , 52) ; color: rgb(187 , 187 , 187) ; font-family: &quot;jetbrains mono&quot; , monospace ; font-size: 10px"><span style="color: #e5c07b">ArrayList </span>arrList = <span style="color: #d55fde ; font-style: italic">new </span><span style="color: #e5c07b">ArrayList</span>();</pre></div></div></div></foreignObject><text x="164" y="179" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">ArrayList arrList = new ArrayLis...</text></switch></g><path d="M 164.5 200 L 164.5 213.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 164.5 218.88 L 161 211.88 L 164.5 213.63 L 168 211.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="20" y="230" width="290" height="40" rx="6" ry="6" fill="#282c34" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 288px; height: 1px; padding-top: 250px; margin-left: 22px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><pre style="background-color: rgb(40 , 44 , 52) ; color: rgb(187 , 187 , 187) ; font-family: &quot;jetbrains mono&quot; , monospace ; font-size: 10px"><span style="color: #d55fde ; font-style: italic">public </span><span style="color: #61afef">ArrayList</span>() {<br />    <span style="color: #d55fde ; font-style: italic">this</span>.<span style="color: #ef596f">elementData </span>= <span style="color: #d19a66">DEFAULTCAPACITY_EMPTY_ELEMENTDATA</span>;<br />}</pre></div></div></div></foreignObject><text x="22" y="254" fill="#000000" font-family="Helvetica" font-size="12px">public ArrayList() {...</text></switch></g><rect x="12.5" y="310" width="305" height="70" rx="10.5" ry="10.5" fill="#282c34" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 303px; height: 1px; padding-top: 345px; margin-left: 15px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><pre style="background-color: rgb(40 , 44 , 52) ; color: rgb(187 , 187 , 187) ; font-family: &quot;jetbrains mono&quot; , monospace ; font-size: 10px"><span style="color: #d55fde ; font-style: italic">public static </span><span style="color: #e5c07b">Integer </span><span style="color: #61afef">valueOf</span>(<span style="color: #d55fde ; font-style: italic">int </span><span style="color: #d19a66">i</span>) {<br />    <span style="color: #d55fde ; font-style: italic">if </span>(<span style="color: #d19a66">i </span>&gt;= <span style="color: #e5c07b">IntegerCache</span>.<span style="color: #d19a66">low </span>&amp;&amp; <span style="color: #d19a66">i </span>&lt;= <span style="color: #e5c07b">IntegerCache</span>.<span style="color: #d19a66">high</span>)<br />        <span style="color: #d55fde ; font-style: italic">return </span><span style="color: #e5c07b">IntegerCache</span>.<span style="color: #d19a66">cache</span>[<span style="color: #d19a66">i </span>+ (-<span style="color: #e5c07b">IntegerCache</span>.<span style="color: #d19a66">low</span>)];<br />    <span style="color: #d55fde ; font-style: italic">return new </span><span style="color: #e5c07b">Integer</span>(<span style="color: #d19a66">i</span>);<br />}</pre></div></div></div></foreignObject><text x="15" y="349" fill="#000000" font-family="Helvetica" font-size="12px">public static Integer valueOf(int i) {...</text></switch></g><rect x="67.5" y="420" width="195" height="70" rx="10.5" ry="10.5" fill="#282c34" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 193px; height: 1px; padding-top: 455px; margin-left: 70px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><pre style="background-color: rgb(40 , 44 , 52) ; color: rgb(187 , 187 , 187) ; font-family: &quot;jetbrains mono&quot; , monospace ; font-size: 10px"><span style="color: #d55fde ; font-style: italic">public boolean </span><span style="color: #61afef">add</span>(<span style="color: #e5c07b">E </span><span style="color: #d19a66">e</span>) {<br />    <span style="color: #61afef">ensureCapacityInternal</span>(<span style="color: #ef596f">size </span>+ <span style="color: #d19a66">1</span>); <span style="color: #5c6370 ; font-style: italic"><br /></span><span style="color: #5c6370 ; font-style: italic">    </span><span style="color: #ef596f">elementData</span>[<span style="color: #ef596f">size</span>++] = <span style="color: #d19a66">e</span>;<br />    <span style="color: #d55fde ; font-style: italic">return true</span>;<br />}</pre></div></div></div></foreignObject><text x="70" y="459" fill="#000000" font-family="Helvetica" font-size="12px">public boolean add(E e) {...</text></switch></g><rect x="350" y="420" width="370" height="40" rx="6" ry="6" fill="#282c34" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 368px; height: 1px; padding-top: 440px; margin-left: 352px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><pre style="background-color: rgb(40 , 44 , 52) ; color: rgb(187 , 187 , 187) ; font-family: &quot;jetbrains mono&quot; , monospace ; font-size: 10px"><span style="color: #d55fde ; font-style: italic">private void </span><span style="color: #61afef">ensureCapacityInternal</span>(<span style="color: #d55fde ; font-style: italic">int </span><span style="color: #d19a66">minCapacity</span>) {<br />    <span style="color: #61afef">ensureExplicitCapacity</span>(<span style="color: #61afef">calculateCapacity</span>(<span style="color: #ef596f">elementData</span>, <span style="color: #d19a66">minCapacity</span>));<br />}</pre></div></div></div></foreignObject><text x="352" y="444" fill="#000000" font-family="Helvetica" font-size="12px">private void ensureCapacityInternal(int minCapacity) {...</text></switch></g><rect x="340" y="205" width="280" height="70" rx="10.5" ry="10.5" fill="#282c34" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 278px; height: 1px; padding-top: 240px; margin-left: 342px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><pre style="background-color: rgb(40 , 44 , 52) ; color: rgb(187 , 187 , 187) ; font-family: &quot;jetbrains mono&quot; , monospace ; font-size: 10px"><span style="color: #d55fde ; font-style: italic">private void </span><span style="color: #61afef">ensureExplicitCapacity</span>(<span style="color: #d55fde ; font-style: italic">int </span><span style="color: #d19a66">minCapacity</span>) {<br />    <span style="color: #ef596f">modCount</span>++;<span style="color: #5c6370 ; font-style: italic"><br /></span><span style="color: #5c6370 ; font-style: italic">    </span><span style="color: #d55fde ; font-style: italic">if </span>(<span style="color: #d19a66">minCapacity </span>- <span style="color: #ef596f">elementData</span>.<span style="color: #ef596f">length </span>&gt; <span style="color: #d19a66">0</span>)<br />        <span style="color: #61afef">grow</span>(<span style="color: #d19a66">minCapacity</span>);<br />}</pre></div></div></div></foreignObject><text x="342" y="244" fill="#000000" font-family="Helvetica" font-size="12px">private void ensureExplicitCapacity(int minCap...</text></switch></g><rect x="350" y="10" width="320" height="160" rx="24" ry="24" fill="#282c34" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 318px; height: 1px; padding-top: 90px; margin-left: 352px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><pre style="background-color: rgb(40 , 44 , 52) ; color: rgb(187 , 187 , 187) ; font-family: &quot;jetbrains mono&quot; , monospace ; font-size: 10px"><span style="color: #d55fde ; font-style: italic">private void </span><span style="color: #61afef">grow</span>(<span style="color: #d55fde ; font-style: italic">int </span><span style="color: #d19a66">minCapacity</span>) {<br />    <span style="color: #5c6370 ; font-style: italic">// overflow-conscious code<br /></span><span style="color: #5c6370 ; font-style: italic">    </span><span style="color: #d55fde ; font-style: italic">int </span>oldCapacity = <span style="color: #ef596f">elementData</span>.<span style="color: #ef596f">length</span>;<br />    <span style="color: #d55fde ; font-style: italic">int </span>newCapacity = oldCapacity + (oldCapacity &gt;&gt; <span style="color: #d19a66">1</span>);<br />    <span style="color: #d55fde ; font-style: italic">if </span>(newCapacity - <span style="color: #d19a66">minCapacity </span>&lt; <span style="color: #d19a66">0</span>)<br />        newCapacity = <span style="color: #d19a66">minCapacity</span>;<br />    <span style="color: #d55fde ; font-style: italic">if </span>(newCapacity - <span style="color: #d19a66">MAX_ARRAY_SIZE </span>&gt; <span style="color: #d19a66">0</span>)<br />        newCapacity = <span style="color: #61afef">hugeCapacity</span>(<span style="color: #d19a66">minCapacity</span>);<br />    <span style="color: #5c6370 ; font-style: italic">// minCapacity is usually close to size, so this is a win:<br /></span><span style="color: #5c6370 ; font-style: italic">    </span><span style="color: #ef596f">elementData </span>= <span style="color: #e5c07b">Arrays</span>.<span style="color: #61afef">copyOf</span>(<span style="color: #ef596f">elementData</span>, newCapacity);<br />}</pre></div></div></div></foreignObject><text x="352" y="94" fill="#000000" font-family="Helvetica" font-size="12px">private void grow(int minCapacity) {...</text></switch></g><path d="M 260 450 L 341.76 450" fill="none" stroke="#000000" stroke-width="2" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 347.76 450 L 339.76 454 L 341.76 450 L 339.76 446 Z" fill="#000000" stroke="#000000" stroke-width="2" stroke-miterlimit="10" pointer-events="all"/><path d="M 164.5 280 L 164.5 293.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 164.5 298.88 L 161 291.88 L 164.5 293.63 L 168 291.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 164.5 390 L 164.5 403.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 164.5 408.88 L 161 401.88 L 164.5 403.63 L 168 401.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 490 410 L 490 396.37" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 490 391.12 L 493.5 398.12 L 490 396.37 L 486.5 398.12 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 489.5 300 L 489.5 286.37" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 489.5 281.12 L 493 288.12 L 489.5 286.37 L 486 288.12 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 540 280 L 540 293.63" fill="none" stroke="#ff3333" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 540 298.88 L 536.5 291.88 L 540 293.63 L 543.5 291.88 Z" fill="#ff3333" stroke="#ff3333" stroke-miterlimit="10" pointer-events="all"/><path d="M 540 390 L 540 403.63" fill="none" stroke="#ff3333" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 540 408.88 L 536.5 401.88 L 540 403.63 L 543.5 401.88 Z" fill="#ff3333" stroke="#ff3333" stroke-miterlimit="10" pointer-events="all"/><path d="M 540 460 L 540 470 Q 540 480 530 480.05 L 269.26 481.36" fill="none" stroke="#ff3333" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 264.01 481.38 L 270.99 477.85 L 269.26 481.36 L 271.03 484.85 Z" fill="#ff3333" stroke="#ff3333" stroke-miterlimit="10" pointer-events="all"/><rect x="340" y="305" width="390" height="80" rx="12" ry="12" fill="#282c34" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 388px; height: 1px; padding-top: 345px; margin-left: 342px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><pre style="background-color: rgb(40 , 44 , 52) ; color: rgb(187 , 187 , 187) ; font-family: &quot;jetbrains mono&quot; , monospace ; font-size: 10px"><span style="color: #d55fde ; font-style: italic">private static int </span><span style="color: #61afef">calculateCapacity</span>(<span style="color: #e5c07b">Object</span>[] <span style="color: #d19a66">elementData</span>, <span style="color: #d55fde ; font-style: italic">int </span><span style="color: #d19a66">minCapacity</span>) {<br />    <span style="color: #d55fde ; font-style: italic">if </span>(<span style="color: #d19a66">elementData </span>== <span style="color: #d19a66">DEFAULTCAPACITY_EMPTY_ELEMENTDATA</span>) {<br />        <span style="color: #d55fde ; font-style: italic">return </span><span style="color: #e5c07b">Math</span>.<span style="color: #61afef">max</span>(<span style="color: #d19a66">DEFAULT_CAPACITY</span>, <span style="color: #d19a66">minCapacity</span>);<br />    }<br />    <span style="color: #d55fde ; font-style: italic">return </span><span style="color: #d19a66">minCapacity</span>;<br />}</pre></div></div></div></foreignObject><text x="342" y="349" fill="#000000" font-family="Helvetica" font-size="12px">private static int calculateCapacity(Object[] elementData, int mi...</text></switch></g><path d="M 489.5 200 L 489.5 186.37" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 489.5 181.12 L 493 188.12 L 489.5 186.37 L 486 188.12 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 540 180 L 540 193.63" fill="none" stroke="#ff3333" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 540 198.88 L 536.5 191.88 L 540 193.63 L 543.5 191.88 Z" fill="#ff3333" stroke="#ff3333" stroke-miterlimit="10" pointer-events="all"/></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://desk.draw.io/support/solutions/articles/16000042487" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Viewer does not support full SVG 1.1</text></a></switch></svg>